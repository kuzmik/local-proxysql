apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "proxysql.fullname" . }}
  labels:
{{ include "proxysql.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "proxysql.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "proxysql.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app: proxysql
        component: satellite
    spec:
      serviceAccountName: proxysql
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      # initContainers:
      #   # sample init container, will be used for secrets work in the future
      #   - name: install
      #     image: busybox:1.28
      #     command:
      #     - env
      #     volumeMounts:
      #     - name: proxysql-var
      #       mountPath: "/proxysql"
      containers:
        {{- if .Values.agentSidecar.enabled }}
        - name: proxysql-agent
          image: "{{ .Values.agentSidecar.image.repository }}:{{ .Values.agentSidecar.image.tag }}"
          imagePullPolicy: {{ .Values.agentSidecar.image.pullPolicy }}
          command:
            - /app/proxysql-agent
            - --start_delay=5
            - --run_mode=satellite
            - --log.format=text
          lifecycle:
            preStop:
              exec:
                # sleep for 5 minutes, so that the sidecar remains up long enough to kill proxysql
                # itself. Once proxysql is shutdown, this container issues an os.Exit(0) so it will
                # likely never actually be 5 minutes.
                command: ["/bin/sh", "-c", "echo 'sleeping for up to 300s while proxysql gracefully shuts down'; sleep 300"]
          startupProbe:
            httpGet:
              path: /healthz/started
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 2
          readinessProbe:
            httpGet:
              path: /healthz/started
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /healthz/started
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 15
          resources:
            limits:
              cpu: 250m
              memory: 250Mi
            requests:
              cpu: 250m
              memory: 250Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            runAsNonRoot: true
            runAsUser: 1000
          volumeMounts:
            - mountPath: /var/lib/proxysql
              name: proxysql-var
        {{- end }}
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: proxysql-mysql
              containerPort: 6033
              protocol: TCP
            - name: proxysql-admin
              containerPort: 6032
              protocol: TCP
          volumeMounts:
            - mountPath: /var/lib/proxysql
              name: proxysql-var
              readOnly: false
            - name: {{ .Release.Name }}-config
              mountPath: /etc/proxysql.cnf
              subPath: proxysql.cnf
            - name: {{ .Release.Name }}-config
              mountPath: /etc/mysql/conf.d/proxysql-admin.cnf
              subPath: my.cnf
            - name: {{ .Release.Name }}-passwords
              mountPath: "/var/lib/proxysql/secrets"
              readOnly: true
          # this appears to not work in orbstack k8s; need to test in staging
          lifecycle:
            preStop:
              httpGet:
                path: /shutdown
                port: 8080
          startupProbe:
            httpGet:
              path: /healthz/started
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 2
          readinessProbe:
            httpGet:
              path: /healthz/ready
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /healthz/live
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 15
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            runAsNonRoot: true
            runAsUser: 999
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
        - emptyDir: {}
          name: proxysql-var
        - name: {{ .Release.Name }}-config
          configMap:
            name: {{ .Release.Name }}-cm
        - name: {{ .Release.Name }}-passwords
          secret:
            secretName: {{ .Release.Name }}-passwords
